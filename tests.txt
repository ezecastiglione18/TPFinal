import org.scalatest.{FreeSpec, Matchers}
import personaje.{Anfitrion, Huesped}
import recuerdo.Recuerdo
import escenario.{BajoCoste, DeLujo, Escenario, Estandar}
import trama.Trama


class ParcialTest extends FreeSpec with Matchers
{
  val bajoCoste = new BajoCoste("bajoCoste","una zona rara para que sume mucho nivel de fama")
  val deLujo = new DeLujo(nombre = "cantina B" , cantidadDeVisitas = 50)
  //
  val cantina = new Escenario(nombre = "cantina",bajoCoste)
  val cantinaB = new Escenario(nombre = "cantinaB",deLujo)
  //
  val recuerdoDelEternoAmor = new Recuerdo(descripcion = "conocerAlAmorDeMiVida",escenario = cantinaB)
  //
  val dolores = new Anfitrion(energia = 90,velocidad = 0.8,List(recuerdoDelEternoAmor))
  val william = new Huesped(energia = 70,minutosRestantes = 3600, List(dolores))
  val jose = new Anfitrion(0.008,0.2,List(recuerdoDelEternoAmor))

  val trama1 = new Trama(List(dolores,william,jose),cantinaB)

  "personajes" -
    {
      "anfitriones" -
        {
          "dolores tiene un nivel de felicidad igual a 112.5" in
          {
            dolores.nivelDeFelicidad() shouldBe 112.5
          }
          "dolores tiene un nivel de rebeldia igual a 0.088" in
          {
            dolores.nivelDeRebeldia() shouldBe 1/112.5
          }
          "dolores no es rebelde" in
          {
            dolores.esRebelde().equals(false)
          }
          "dolores va a conocer la cantina y tiene como recuerdos recuerdoDelEternoamor y cantina" in
          {
            dolores.conocerUnEscenario(cantina)
            dolores.recuerdos shouldBe List(recuerdoDelEternoAmor,cantina)
          }
          "dolores va a conocer la cantina y se queda con energia 0" in
          {
            dolores.conocerUnEscenario(cantina)
            dolores.energia shouldBe 0.0
          }

        }
      "huespedes" -
        {
          "william tiene un nivel de felicidad igual a 405000" in
           {
             william.nivelDeFelicidad() shouldBe 405000
           }

          "william despues de conocer la cantina b pierde minutos" in
            {
              william.conocerUnEscenario(cantinaB)
              william.minutosRestantes shouldBe 3590
            }
        }
    }

    "escenarios" -
  {
    "El nivel de fama de la cantina b debe ser 150" in
    {
      cantinaB.nivelDeFama() shouldBe 150
    }

    "El nivel de fama de la cantina es mayor a 100" in
    {
      cantina.nivelDeFama().>(100)
    }

    "Cuando la cantina evoluciona, pasa a ser estandar" in
      {
          cantina.evolucionar()
          cantina.tipo shouldBe "Estandar"
      }
  }

  "recuerdo" -
  {
    "el nivel de emotividad de recuerdoDelEternoAmor es de " in
    {
      recuerdoDelEternoAmor.nivelDeEmotividad() shouldBe 0.14
    }
  }

  "trama" -
  {
      "El nivel de complejidad de la trama 1 es" in
      {
        trama1.complejidad() shouldBe 1/2700
      }

      "Cuando la trama 1 se renueva, la cantina sigue siendo DeLujo" in
      {
        trama1.renovar()
        cantinaB.tipo shouldBe deLujo
      }
  }
}